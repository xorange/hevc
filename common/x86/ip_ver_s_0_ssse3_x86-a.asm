

%include "x86inc.asm"
%include "ip_ssse3_x86-a.inc"

extern pshuffq_zero
extern pshuffd_zero
extern pshuffw_zero
extern pshuffd_w

DECLARE_EXTERN_LUMA_COEF_SSSE3 S
DECLARE_EXTERN_CHROMA_COEF_SSSE3 S

%define		X265_OUTPUT_DST_INT					 0

%macro SET_DST_INT_ADDRESS 0
%if 1 == X265_OUTPUT_DST_INT
	MOV dst_int, width_parameter
	SUB dst_int, col
	IMUL dst_int, 4
	ADD dst_int, dst_int_parameter
%endif
%endmacro

%macro STORE_DST_INT 1
%if 1 == X265_OUTPUT_DST_INT
%if COL_SIZE == 1
	MOVD [dst_int], %1
%elif COL_SIZE == 2
	MOVQ [dst_int], %1
%elif COL_SIZE == 3
	MOVQ [dst_int], %1
	PSRLDQ %1, 8
	MOVD [dst_int+8], %1
%elif COL_SIZE == 4
	MOVDQA [dst_int], %1
%endif
	ADD dst_int, X265_DST_INT_STRIDE
%endif
%endmacro

%macro SET_REF_AND_DST 0
	MOV ref, width_parameter
	SUB ref, col
	ADD ref, ref
	ADD ref, ref_parameter
	SUB ref, ref_stride
%if X265_LUMA_FLAGS == CHROMA_FLAGS
	SUB ref, ref_stride
	SUB ref, ref_stride
%endif
	MOV dst, width_parameter
	SUB dst, col
%if P_FLAGS == DST_FLAGS
%if 2 == SIZE_OF_PIXEL
	ADD dst, dst
%endif
%else
	ADD dst, dst
%endif
	ADD dst, dst_parameter
	SET_DST_INT_ADDRESS
%endmacro

%macro GET_MAX 0
	MOV SPACE1, 1
	MOV ecx, bit_depth_parameter
	SHL SPACE1, cl
	DEC SPACE1
	MOVD XMAX, SPACE1
%if 1 == SIZE_OF_PIXEL
	PSHUFB XMAX, [pshuffd_zero]
%else
	PSHUFB XMAX, [pshuffw_zero]
%endif
%endmacro

%macro GET_OFFSET_AND_SHIFT	0
%if P_FLAGS == DST_FLAGS
	MOV SPACE1, (X265_IF_INTERNAL_PREC_ASM+X265_IF_FILTER_PREC_ASM)
	SUB SPACE1, bit_depth_parameter
	MOV r1, SPACE1
	DEC r1
	MOV SPACE2, 1
	SHL SPACE2, cl
	ADD SPACE2, (X265_IF_INTERNAL_OFFS_ASM<<(X265_IF_FILTER_PREC_ASM))
	MOVD XOFFSET_AND_SHIFT, SPACE2
	PSHUFB XOFFSET_AND_SHIFT, [pshuffd_zero]
	MOVD XSPACE1, SPACE1
	PSHUFB XSPACE1, [pshuffq_zero]
	MOVLHPS XOFFSET_AND_SHIFT, XSPACE1
%elif S_FLAGS == DST_FLAGS
	MOV SPACE1, X265_IF_FILTER_PREC_ASM
	MOVD XOFFSET_AND_SHIFT, SPACE1
	PSHUFB XOFFSET_AND_SHIFT, [pshuffq_zero]
%endif
%endmacro

%macro PREPARE_PARAMETER 0
	GET_MAX
	GET_OFFSET_AND_SHIFT
%if X265_CHROMA_FLAGS == CHROMA_FLAGS
	MOVDQA XCOEFF1, [XCOEFFS]
	MOVDQA XCOEFF2, [XCOEFFS+16]
%endif
%endmacro

%macro READ_N_COL_DATA 2
	READ_N_BYTES_DATA %1, %2, (COL_SIZE*2)
	ADD ref, ref_stride
%endmacro

%macro STORE_N_COL_DATA 2
%if P_FLAGS == DST_FLAGS
	STORE_N_BYTES_DATA %1, %2, (COL_SIZE*SIZE_OF_PIXEL)
%else
	STORE_N_BYTES_DATA %1, %2, (COL_SIZE*2)
%endif
%endmacro

%macro INIT_REF_HEADER_PIXEL 4
%if X265_LUMA_FLAGS == CHROMA_FLAGS
	READ_N_COL_DATA %1, [ref]
	READ_N_COL_DATA %2, [ref]
	READ_N_COL_DATA %3, [ref]
	READ_N_COL_DATA XSPACE1, [ref]
	MOVLHPS %4, XSPACE1
	READ_N_COL_DATA XSPACE1, [ref]
	MOVLHPS %1, XSPACE1
	READ_N_COL_DATA XSPACE1, [ref]
	MOVLHPS %2, XSPACE1
	READ_N_COL_DATA XSPACE1, [ref]
	MOVLHPS %3, XSPACE1
%elif X265_CHROMA_FLAGS == CHROMA_FLAGS
	READ_N_COL_DATA %1     , [ref]
	READ_N_COL_DATA XSPACE1, [ref]
	MOVLHPS %2, XSPACE1
	READ_N_COL_DATA XSPACE1, [ref]
	MOVLHPS %1, XSPACE1
%endif
%endmacro

%macro POST_PROCESS_AND_STORE 0
%if P_FLAGS == DST_FLAGS
	MOVQ XSPACE1, XOFFSET_AND_SHIFT
	MOVLHPS XSPACE1, XOFFSET_AND_SHIFT
	PADDD XRESULT, XSPACE1
	PXOR XSPACE1, XSPACE1
	MOVHLPS XSPACE1, XOFFSET_AND_SHIFT
	PSRAD XRESULT, XSPACE1
%if 1 == SIZE_OF_PIXEL
	PXOR XSPACE1, XSPACE1
	PMAXSW XRESULT, XSPACE1
	PMINSW XRESULT, XMAX
	PACKUSWB XRESULT, XRESULT
	PACKUSWB XRESULT, XRESULT
%else
	PSHUFB XRESULT, [pshuffd_w]
	PXOR XSPACE1, XSPACE1
	PMAXSW XRESULT, XSPACE1
	PMINSW XRESULT, XMAX
%endif
%else
	PSRAD XRESULT, XOFFSET_AND_SHIFT
	PSHUFB XRESULT, [pshuffd_w]
%endif
	STORE_N_COL_DATA dst, XRESULT
%if P_FLAGS == DST_FLAGS
	ADD_ADDRESS dst, dst_stride_parameter
%else
	ADD dst, dst_stride_parameter
	ADD dst, dst_stride_parameter
%endif
%endmacro

%macro X265_IP_FILTER_ONE_ROW_ONE_COL_VER_S_HELP_SSSE3 4
%if X265_LUMA_FLAGS == CHROMA_FLAGS
	MOVHLPS %4, %4
	READ_N_COL_DATA XSPACE1, [ref]
	MOVLHPS %4, XSPACE1
	MOVDQA XRESULT, %1
	MOVDQA XSPACE1, %1
	PUNPCKLWD XRESULT, %2
	PUNPCKHWD XSPACE1, %2
	PMADDWD XRESULT, XCOEFF1
	PMADDWD XSPACE1, XCOEFF3
	PADDD XRESULT, XSPACE1
	MOVDQA XSPACE1, %3
	PUNPCKLWD XSPACE1, %4
	PMADDWD XSPACE1, XCOEFF2
	PADDD XRESULT, XSPACE1
	MOVDQA XSPACE1, %3
	PUNPCKHWD XSPACE1, %4
	PMADDWD XSPACE1, XCOEFF4
	PADDD XRESULT, XSPACE1
%elif X265_CHROMA_FLAGS == CHROMA_FLAGS
	MOVHLPS %2, %2
	READ_N_COL_DATA XSPACE1, [ref]
	MOVLHPS %2, XSPACE1
	MOVDQA XRESULT, %1
	MOVDQA XSPACE1, %1
	PUNPCKLWD XRESULT, %2
	PUNPCKHWD XSPACE1, %2
	PMADDWD XRESULT, XCOEFF1
	PMADDWD XSPACE1, XCOEFF2
	PADDD XRESULT, XSPACE1
%endif
	STORE_DST_INT XRESULT
	POST_PROCESS_AND_STORE
%endmacro

%macro X265_IP_FILTER_N_GROUP_ROW_ONE_COL_VER_S_HELP_SSSE3		5
	CMP row, %5
	JL %%X265_IP_FILTER_N_GROUP_ROW_ONE_COL_VER_S_HELP_SSSE3_LABEL_EXIT
%if X265_LUMA_FLAGS == CHROMA_FLAGS
%%X265_IP_FILTER_N_GROUP_ROW_ONE_COL_VER_S_HELP_SSSE3_LABEL_LOOP:
	X265_IP_FILTER_ONE_ROW_ONE_COL_VER_S_HELP_SSSE3 %1, %2, %3, %4
%if %5 > 1
	X265_IP_FILTER_ONE_ROW_ONE_COL_VER_S_HELP_SSSE3 %2, %3, %4, %1
%endif
%if %5 > 2
	X265_IP_FILTER_ONE_ROW_ONE_COL_VER_S_HELP_SSSE3 %3, %4, %1, %2
%endif
%if %5 > 3
	X265_IP_FILTER_ONE_ROW_ONE_COL_VER_S_HELP_SSSE3 %4, %1, %2, %3
%endif
	SUB row, %5
	CMP row, %5
	JGE %%X265_IP_FILTER_N_GROUP_ROW_ONE_COL_VER_S_HELP_SSSE3_LABEL_LOOP
%elif X265_CHROMA_FLAGS == CHROMA_FLAGS
%%X265_IP_FILTER_N_GROUP_ROW_ONE_COL_VER_S_HELP_SSSE3_LABEL_LOOP:
	X265_IP_FILTER_ONE_ROW_ONE_COL_VER_S_HELP_SSSE3 %1, %2, %3, %4
%if %5 > 1
	X265_IP_FILTER_ONE_ROW_ONE_COL_VER_S_HELP_SSSE3 %2, %1, %3, %4
%endif
	SUB row, %5
	CMP row, %5
	JGE %%X265_IP_FILTER_N_GROUP_ROW_ONE_COL_VER_S_HELP_SSSE3_LABEL_LOOP
%endif
%%X265_IP_FILTER_N_GROUP_ROW_ONE_COL_VER_S_HELP_SSSE3_LABEL_EXIT:
%endmacro

%macro X265_IP_FILTER_N_ROW_ONE_COL_VER_S_HELP_SSSE3 5
	%define COL_SIZE %5
	INIT_REF_HEADER_PIXEL %1, %2, %3, %4
	MOV row, height_parameter
%if X265_LUMA_FLAGS == CHROMA_FLAGS
	X265_IP_FILTER_N_GROUP_ROW_ONE_COL_VER_S_HELP_SSSE3 %1, %2, %3, %4, 4
	X265_IP_FILTER_N_GROUP_ROW_ONE_COL_VER_S_HELP_SSSE3 %1, %2, %3, %4, 3
	X265_IP_FILTER_N_GROUP_ROW_ONE_COL_VER_S_HELP_SSSE3 %1, %2, %3, %4, 2
	X265_IP_FILTER_N_GROUP_ROW_ONE_COL_VER_S_HELP_SSSE3 %1, %2, %3, %4, 1
%elif X265_CHROMA_FLAGS == CHROMA_FLAGS
	X265_IP_FILTER_N_GROUP_ROW_ONE_COL_VER_S_HELP_SSSE3 %1, %2, %3, %4, 2
	X265_IP_FILTER_N_GROUP_ROW_ONE_COL_VER_S_HELP_SSSE3 %1, %2, %3, %4, 1
%endif
%endmacro

%macro X265_IP_FILTER_N_ROW_N_COL_VER_S_HELP_SSSE3		5
	CMP col, MAX_COL_SIZE
	JL %%X265_IP_FILTER_N_ROW_N_COL_VER_S_HELP_SSSE3_LABEL_LESS_THAN_MAX_COL_SIZE
%%X265_IP_FILTER_N_ROW_N_COL_VER_S_HELP_SSSE3_LABEL_MAX_COL_SIZE_LOOP:
	SET_REF_AND_DST
	X265_IP_FILTER_N_ROW_ONE_COL_VER_S_HELP_SSSE3 %1, %2, %3, %4, MAX_COL_SIZE
	SUB col, MAX_COL_SIZE
	CMP col, MAX_COL_SIZE
	JGE %%X265_IP_FILTER_N_ROW_N_COL_VER_S_HELP_SSSE3_LABEL_MAX_COL_SIZE_LOOP
%%X265_IP_FILTER_N_ROW_N_COL_VER_S_HELP_SSSE3_LABEL_LESS_THAN_MAX_COL_SIZE
%if %5 > 0
	SET_REF_AND_DST
	X265_IP_FILTER_N_ROW_ONE_COL_VER_S_HELP_SSSE3 %1, %2, %3, %4, %5
	SUB col, %5
%endif
%endmacro

%macro RUN_AVAILABLE_IP_FILTER_N_ROW_N_COL_VER_S_FUNC 1
	MOV r1, 0
	CMP r0, %1
	JNE %%RUN_AVAILABLE_IP_FILTER_N_ROW_N_COL_VER_S_FUNC_EXIT
	X265_IP_FILTER_N_ROW_N_COL_VER_S_HELP_SSSE3 XMMR1, XMMR2, XMMR3, XMMR4, %1
	MOV r1, 1
%%RUN_AVAILABLE_IP_FILTER_N_ROW_N_COL_VER_S_FUNC_EXIT:
%endmacro

%macro X265_IP_FILTER_VER_S_SSSE3_HELP 4
	%define			XCOEFFS						%2
	%define			CHROMA_FLAGS				%3
	%define			DST_FLAGS					%4
	%define			SPACE1						r0
	%define			SPACE2						r2
	%define			SPACE3						r3
	%define			col							r6
	%define			row							r5
	%define			ref							r4
	%define			dst							r3
	%define			ref_stride					r2
	%define			dst_int						r1
	%define			XSPACE1						XMMR0
	%define			XSPACE2						XMMR7
	%define			XRESULT						XSPACE2
	%define			XMAX						XMMR5
	%define			XOFFSET_AND_SHIFT			XMMR6
	%define			ref_parameter				r0m
	%define			ref_stride_parameter		r1m
	%define			dst_parameter				r2m
	%define			dst_stride_parameter		r3m
	%define			width_parameter				r4m
	%define			height_parameter			r5m
	%define			bit_depth_parameter			r6m
	%define			dst_int_parameter			r7m
%if X265_LUMA_FLAGS == CHROMA_FLAGS
	%define			XCOEFF1						[XCOEFFS     ]
	%define			XCOEFF2						[XCOEFFS+16*1]
	%define			XCOEFF3						[XCOEFFS+16*2]
	%define			XCOEFF4						[XCOEFFS+16*3]
%elif X265_CHROMA_FLAGS == CHROMA_FLAGS
	%define			XCOEFF1						XMMR3
	%define			XCOEFF2						XMMR4
%endif
	%define			MAX_COL_SIZE				4
	%define			MAX_COL_SIZE_BITS			2
cglobal %1, 0, 7
	PREPARE_PARAMETER
	MOV ref_stride, ref_stride_parameter
	IMUL ref_stride, 2
	MOV col, width_parameter
	MOV r0, col
	MOV r1, col
	SHR r1, MAX_COL_SIZE_BITS
	SHL r1, MAX_COL_SIZE_BITS
	SUB r0, r1
	RUN_AVAILABLE_IP_FILTER_N_ROW_N_COL_VER_S_FUNC 0
	CMP r1, 1
	JE %%X265_IP_FILTER_VER_S_SSSE3_HELP_EXIT
	RUN_AVAILABLE_IP_FILTER_N_ROW_N_COL_VER_S_FUNC 2
	CMP r1, 1
	JE %%X265_IP_FILTER_VER_S_SSSE3_HELP_EXIT
	RUN_AVAILABLE_IP_FILTER_N_ROW_N_COL_VER_S_FUNC 1
	CMP r1, 1
	JE %%X265_IP_FILTER_VER_S_SSSE3_HELP_EXIT
	RUN_AVAILABLE_IP_FILTER_N_ROW_N_COL_VER_S_FUNC 3
	CMP r1, 1
	JE %%X265_IP_FILTER_VER_S_SSSE3_HELP_EXIT
%%X265_IP_FILTER_VER_S_SSSE3_HELP_EXIT:
	RET
%endmacro

SECTION .text align=16

DEFINE_ALL_IP_FILTER_LUMA_SSSE3_FUNC ver, VER, s, S, p, P_FLAGS
DEFINE_ALL_IP_FILTER_LUMA_SSSE3_FUNC ver, VER, s, S, s, S_FLAGS
DEFINE_ALL_IP_FILTER_CHROMA_SSSE3_FUNC ver, VER, s, S, p, P_FLAGS
DEFINE_ALL_IP_FILTER_CHROMA_SSSE3_FUNC ver, VER, s, S, s, S_FLAGS
